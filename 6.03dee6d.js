(this.webpackJsonp=this.webpackJsonp||[]).push([[6],{"./wiki/contributing.md":function(e,v,i){"use strict";i.r(v);var l=i("./node_modules/vue-loader/lib/runtime/componentNormalizer.js"),_=Object(l.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,v=e.$createElement,i=e._self._c||v;return i("section",[i("h1",[e._v("贡献指南")]),i("p",[e._v("内网 "),i("a",{attrs:{href:""}},[e._v("仓库地址")])]),i("h2",[e._v("Pull Request 规范")]),i("ul",[i("li",[e._v("fork 一份到自己的项目下，不要直接在仓库下建分支")]),i("li",[e._v("PR 信息以  [组件名]: [描述信息]  的形式填写，例如 Button: fix xxx bug。")]),i("li",[e._v("编写组件前请先同至少两名维护成员沟通组件属性，确定属性后请先将确定的属性写入  index.md  后编写单元测试 （具体开发流程见下文）")]),i("li",[e._v("如果是修复 bug 请在 commit 中给出描述信息 或 issue 地址")]),i("li",[e._v("确保所有的测试都是通过的 npm run test")]),i("li",[e._v("确保你的代码跑过 lint 检查 npm run lint ( lint 会在 git commit 时自动运行 )")]),i("li",[e._v("合并代码必须要经过  review")])]),i("h2",[e._v("分支管理")]),i("ul",[i("li",[e._v("推荐使用以下命名来管理分支：")]),i("li",[e._v("功能开发以 "),i("code",{pre:!0},[e._v("feature/功能名")]),e._v(" 命名")]),i("li",[e._v("组件开发以 "),i("code",{pre:!0},[e._v("components/组件名")]),e._v(" 命名")]),i("li",[e._v("修复 bug 以 "),i("code",{pre:!0},[e._v("bugfix/bug(bugId或简短名)")]),e._v(" 命名")]),i("li",[e._v("紧急修复以 "),i("code",{pre:!0},[e._v("hotfix/bug")]),e._v(" 命名。")])]),i("h2",[e._v("开发环境依赖")]),i("p",[e._v("node 8+, npm 5+, 由于使用 package-lock.json 请使用 "),i("code",{pre:!0},[e._v("npm install")]),e._v(" 或者 "),i("code",{pre:!0},[e._v("mnpm install")]),e._v(" 安装依赖\n查看 demo")]),i("pre",{pre:!0},[i("code",{pre:!0,attrs:{"v-pre":""}},[e._v("npm start\n")])]),i("p",[e._v("打包代码")]),i("pre",{pre:!0},[i("code",{pre:!0,attrs:{"v-pre":""}},[e._v("npm run build\n")])]),i("h2",[e._v("组件开发")]),i("p",[e._v("使用命令快速创建组件 ( 执行前请先进行 "),i("code",{pre:!0},[e._v("npm install")]),e._v(" )")]),i("pre",{pre:!0},[i("code",{pre:!0,attrs:{"v-pre":""}},[e._v("npm run create <componentName> [chineseName]\n")])]),i("h2",[e._v("组件开发流程")]),i("ul",[i("li",[e._v("确定属性拆分，各组件的作用")]),i("li",[e._v("确定组件属性、事件、插槽等")]),i("li",[e._v("编写 demo 文档，文档应该包含: 设计场景实现的伪代码、相关组件属性、事件、插槽的定义，至少 2 名维护人员共同 review 文档， review 应该关注以下几点：\n"),i("ul",[i("li",[e._v("场景用例是不是典型，是否覆盖到设计稿中的所有场景")]),i("li",[e._v("场景实现是不是合理")]),i("li",[e._v("属性、事件定义是不是合理，能不能清楚的描述出属性的作用")]),i("li",[e._v("与其他组件库不同的点，说明不同的原因")])])]),i("li",[e._v("编写单元测试（先编写测试用例 review，后完善具体测试）并提交到各自仓库，相关人员 review 单元测试，review 应该关注以下几点：\n"),i("ul",[i("li",[e._v("测试用例完整性，是否覆盖住所有对外属性")]),i("li",[e._v("测试用例的合理性，是否有漏掉某些属性场景")]),i("li",[e._v("测试用例的正确性，是否能够通过对比得出验证测试用例正确")])])]),i("li",[e._v("开发编写 组件功能 + 样式\n"),i("ul",[i("li",[e._v("提交组件 PR 到 develop，提交信息命名以 [组件名]: [描述信息/功能] 的形式填写")])])]),i("li",[e._v("设计 review 交互、功能样式，开发人员 review 代码质量，通过后合并")])])])}],!1,null,null,null);v.default=_.exports}}]);
//# sourceMappingURL=6.03dee6d.js.map