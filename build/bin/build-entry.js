const Components = require('../../components.json');
const path = require('path');
const fs = require('fs');
const uppercamelcase = require('uppercamelcase');
const pkg = require('../../package.json');

const OUTPUT_PATH = path.join(__dirname, '../../src/index.ts');

const importComponentTemplate = [];
const installTemplate = [];
const listTemplate = [];
Object.keys(Components).forEach(name => {
  const componentName = uppercamelcase(name);
  const path = Components[name]
  importComponentTemplate.push(
    `import ${componentName} from '${path}';`
  );

  listTemplate.push(componentName);

  if (['message', 'notification', 'confirm'].includes(name)) {
    return;
  }
  installTemplate.push(componentName);
});

const importStr = importComponentTemplate.join('\n');
// 为最后一行加上尾逗号，防止报错
const installStr = installTemplate.join(',\n  ') + ',';
const listStr = listTemplate.join(',\n  ') + ',';

const template = `/* Automatically generated by './build/bin/build-entry.js' */
${importStr}
import CollapseTransition from './transitions/collapse-transition';

const components = [
  ${installStr}
  CollapseTransition,
];

export function install (Vue) {
  components.map(component => {
    Vue.component(component.name, component);
  });
  const $zz = {
    confirm: Confirm,
    notify: Notification,
    message: Message,
  };

  Vue.prototype.$zz = $zz;
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}

export {
  ${listStr}
  CollapseTransition,
};

export default {
  version: '${pkg.version}',
  install,
};
`;
fs.writeFileSync(OUTPUT_PATH, template);
console.log('[build entry] DONE:', OUTPUT_PATH);
